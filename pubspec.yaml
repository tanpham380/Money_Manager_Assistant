name: money_assistant

description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.8

environment:
  sdk: ">=2.19.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  #  material_floating_search_bar: ^0.3.3
  #  cloud_firestore: ^0.16.0+1
  #  syncfusion_flutter_datepicker: ^19.2.62
  #  flutter_spinkit: ^5.1.0
  shared_preferences: ^2.2.2
  sqflite: ^2.3.2
  intl: ^0.18.0
  provider: ^6.1.1  
  flutter_screenutil: ^5.9.0
  # flutter_login: ^5.0.0
  flutter_screen_lock: ^9.0.2
  flutter_app_lock: ^4.1.1+1
  google_fonts: ^6.1.0
  table_calendar: ^3.0.9
  syncfusion_flutter_charts: ^24.2.6
  day_night_time_picker: ^1.3.0+1
  flutter_material_pickers: ^3.6.0
  sliding_up_panel: ^2.0.0+1
  keyboard_actions: ^4.2.0
  fluttertoast: ^8.2.4
  flutter_swipe_action_cell: ^3.1.3
  # in_app_review: ^2.0.8
  # rate_my_app: ^2.0.0
#  local_auth: ^1.1.8

  # icons
  material_design_icons_flutter: ^7.0.7296
  font_awesome_flutter: ^10.7.0
  outline_material_icons: ^1.0.0
  flutter_boxicons: ^3.0.0
  icofont_flutter: ^1.4.0
  cupertino_icons: ^1.0.6
  local_auth: ^2.1.8

dependency_overrides:
  flutter_colorpicker: ^1.0.3
  # flutter_colorpicker: ^0.6.0

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_native_splash: ^2.2.19
  flutter_launcher_icons: ^0.13.1

flutter_native_splash:
  color: "#ffffff"
  #  color_dark: "#ffffff"
  #  image_dark: images/splash_screen.png
  image: images/splash_screen.jpeg
  android: true
  ios: true
#  android12: true

    # This package generates native code to customize Flutter's default white native splash screen
    # with background color and splash image.
    # Customize the parameters below, and run the following command in the terminal:
    # flutter pub run flutter_native_splash:create
    # To restore Flutter's default white splash screen, run the following command in the terminal:
    # flutter pub run flutter_native_splash:remove

    # color or background_image is the only required parameter.  Use color to set the background
    # of your splash screen to a solid color.  Use background_image to set the background of your
    # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
    # size of the app. Only one parameter can be used, color and background_image cannot both be set.
    #background_image: "assets/background.png"

    # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
    # the leading # character.

    # The image parameter allows you to specify an image used in the splash screen.  It must be a
    # png file.
    #image: assets/splash.png

    # The color_dark, background_image_dark, and image_dark are parameters that set the background
    # and image when the device is in dark mode. If they are not specified, the app will use the
    # parameters from above. If the image_dark parameter is specified, color_dark or
    # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
    # set.
    #color_dark: "#042a49"
    #background_image_dark: "assets/dark-background.png"
    #image_dark: assets/splash-invert.png

    # The android, ios and web parameters can be used to disable generating a splash screen on a given
    # platform.
    #android: false
    #ios: false
    #web: false

    # The position of the splash image can be set with android_gravity, ios_content_mode, and
    # web_image_mode parameters.  All default to center.
    #
    # android_gravity can be one of the following Android Gravity (see
    # https://developer.android.com/reference/android/view/Gravity): bottom, center,
    # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
    # fill_vertical, left, right, start, or top.
    #android_gravity: center
    #
    # ios_content_mode can be one of the following iOS UIView.ContentMode (see
    # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
    # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
    # bottomLeft, or bottomRight.
    #ios_content_mode: center
    #
    # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
    #web_image_mode: center

    # To hide the notification bar, use the fullscreen parameter.  Has no affect in web since web
    # has no notification bar.  Defaults to false.
    # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
    #       To show the notification bar, add the following code to your Flutter app:
    #       WidgetsFlutterBinding.ensureInitialized();
    #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
    #fullscreen: true

    # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
    # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
    # do not remove any spaces:
    #info_plist_files:
    #  - 'ios/Runner/Info-Debug.plist'
    #  - 'ios/Runner/Info-Release.plist'


    #command: flutter clean && flutter pub get && flutter pub run flutter_native_splash:create


    # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.



# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:
  generate: true    # Add this line


  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  assets:
    #   - /Users/hoanguyen/AndroidStudioProjects/moneyassistant/lib/project/localization/lang/
    #   - /Users/hoanguyen/AndroidStudioProjects/moneyassistant/images/
    - lib/project/localization/lang/
    - images/
flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  image_path: "images/splash_screen.jpeg"
  min_sdk_android: 21

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # mmas:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
